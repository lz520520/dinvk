[package]
name = "dinvk"
version = "0.2.6"
edition = "2021"
license = "MIT"
readme = "README.md"
authors = ["Jo√£o Victor"]
description = "Dynamically invoke arbitrary code and use various tricks written idiomatically in Rust (Dinvoke)"
repository = "https://github.com/joaoviictorti/dinvk"
homepage = "https://github.com/joaoviictorti/dinvk"
keywords = ["hacking", "dinvoke", "windows", "rust", "redteam"]
categories = ["os", "security", "no-std"]
include = [
    "src/**",
    "Cargo.toml",
    "README.md",
    "LICENSE",
]

[dependencies]
bitflags = { version = "2.8.0", default-features = false }
cfg-if = "1.0.0"
obfstr = "0.4.4"
spin = "0.10.0"

[features]
default = []
alloc = []
dinvk_panic = []

[package.metadata.docs.rs]
default-target = "x86_64-pc-windows-msvc"
targets = [
    "x86_64-pc-windows-gnu",
    "x86_64-pc-windows-msvc",
    "i686-pc-windows-gnu",
    "i686-pc-windows-msvc",
    "aarch64-pc-windows-msvc"
]

[[example]]
name = "dinvoke"
path = "examples/dinvoke/main.rs"

[[example]]
name = "get_module_and_function"
path = "examples/get_module_and_function/main.rs"

[[example]]
name = "hash"
path = "examples/hash/main.rs"

[[example]]
name = "library_proxy"
path = "examples/library_proxy/main.rs"

[[example]]
name = "syscall"
path = "examples/syscall/main.rs"

[[example]]
name = "tampered_syscall"
path = "examples/tampered_syscall/main.rs"